# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import add_pb2 as add__pb2


class AddServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Compute = channel.unary_unary(
        '/pb.AddService/Compute',
        request_serializer=add__pb2.AddRequest.SerializeToString,
        response_deserializer=add__pb2.AddResponse.FromString,
        )


class AddServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Compute(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AddServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Compute': grpc.unary_unary_rpc_method_handler(
          servicer.Compute,
          request_deserializer=add__pb2.AddRequest.FromString,
          response_serializer=add__pb2.AddResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pb.AddService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
